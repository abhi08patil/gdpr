package com.gdpr.controller;

public class GdprConstant {
	

	/*public static String DROP_GDPR_DELETION_REPORT_TABLE = " BEGIN EXECUTE IMMEDIATE 'DROP TABLE GDPR_DELETION_REPORT_TEST';"
			+ " EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE;"
			+ " END IF;"
			+ " END;";*/
	public static String DROP_GDPR_DELETION_REPORT_TABLE = "DROP TABLE GDPR_DELETION_REPORT";
	
	public static String CREATE_GDPR_DELETION_REPORT_TABLE = "CREATE TABLE GDPR_DELETION_REPORT("+"REQUEST_ID NUMBER,MODULE_ID VARCHAR2(50 BYTE),RECORD_ID VARCHAR2(50 BYTE),"
			+ "DISPLAY_ID VARCHAR2(1000 BYTE),DATE_TOBE_CONSIDERED DATE,EXPECTED_DEL_DATE DATE,DEL_EXEC_DATE DATE, DATA_HOLD VARCHAR2(1 BYTE) DEFAULT 'N',"
			+ "MAPPED_DATA_HOLD VARCHAR2(500 BYTE),MAX_DATA_HOLD_DATE DATE, SOFT_DELETE VARCHAR2(1 BYTE) DEFAULT 'N', STATUS VARCHAR2(100 BYTE),"
			+ "REASON VARCHAR2(1000 BYTE), DELETE_FAILURE_REASON VARCHAR2(1000 BYTE))";
	
	public static String DROP_GDPR_PRE_DELETION_REPORT_TABLE = "DROP TABLE GDPR_PRE_DELETION_REPORT";
	
	public static String CREATE_GDPR_PRE_DELETION_REPORT_TABLE = "CREATE TABLE GDPR_PRE_DELETION_REPORT("+"REQUEST_ID NUMBER,MODULE_ID VARCHAR2(50 BYTE),RECORD_ID VARCHAR2(50 BYTE),"
			+ "DISPLAY_ID VARCHAR2(1000 BYTE),DATE_TOBE_CONSIDERED DATE,EXPECTED_DEL_DATE DATE,DEL_EXEC_DATE DATE, DATA_HOLD VARCHAR2(1 BYTE) DEFAULT 'N',"
			+ "MAPPED_DATA_HOLD VARCHAR2(500 BYTE),MAX_DATA_HOLD_DATE DATE, SOFT_DELETE VARCHAR2(1 BYTE) DEFAULT 'N', STATUS VARCHAR2(100 BYTE),"
			+ "REASON VARCHAR2(1000 BYTE))";
	
	public static final String DROP_GDPR_DELETION_APPROVE_REPORT_TABLE = "DROP TABLE GDPR_DELETION_APPROVE_REPORT";

	public static final String CREATE_GDPR_DELETION_APPROVE_REPORT_TABLE = "CREATE TABLE GDPR_DELETION_APPROVE_REPORT("+"REQUEST_ID NUMBER,MODULE_ID VARCHAR2(50 BYTE),RECORD_ID VARCHAR2(50 BYTE),"
			+ "DISPLAY_ID VARCHAR2(1000 BYTE),DATE_TOBE_CONSIDERED DATE,EXPECTED_DEL_DATE DATE,DEL_EXEC_DATE DATE, DATA_HOLD VARCHAR2(1 BYTE),"
			+ "MAPPED_DATA_HOLD VARCHAR2(500 BYTE),MAX_DATA_HOLD_DATE DATE, SOFT_DELETE VARCHAR2(1 BYTE), STATUS VARCHAR2(100 BYTE),"
			+ "REASON VARCHAR2(1000 BYTE), APPROVAL DATE)";

	public static final String DROP_GDPR_PRE_DELETION_WF_MSTR_TABLE = "DROP TABLE GDPR_PRE_DELETION_WF_MSTR";

	public static final String CREATE_GDPR_PRE_DELETION_WF_MSTR_TABLE = "CREATE TABLE GDPR_PRE_DELETION_WF_MSTR("+"REQUEST_ID NUMBER,REPORT_DATE DATE,CREATED_BY VARCHAR2(100 BYTE),"
			+ "CREATED_DATE DATE,MODIFIED_BY VARCHAR2(100 BYTE),MODIFIED_DATE DATE,LAST_MAKER VARCHAR2(100 BYTE), LAST_CHECKER VARCHAR2(100 BYTE),"
			+ "STATUS_COMMENT VARCHAR2(1000 BYTE),WF_STATUS VARCHAR2(1000 BYTE))";

	public static final String DROP_GDPR_DATA_HOLD_MSTR_TABLE = "DROP TABLE GDPR_DATA_HOLD_MSTR";

	public static final String CREATE_GDPR_DATA_HOLD_MSTR_TABLE = "CREATE TABLE GDPR_DATA_HOLD_MSTR("+"ID VARCHAR2(100 BYTE) PRIMARY KEY,EXTERNAL_DATA_HOLD_ID VARCHAR2(1000 BYTE),HOLD_TYPE VARCHAR2(10 BYTE),"
			+ "HOLD_START_DATE DATE,HOLD_END_DATE DATE,COMMENTS VARCHAR2(4000 BYTE),CREATED_BY VARCHAR2(100 BYTE) NOT NULL, CREATED_DATE DATE NOT NULL,"
			+ "MODIFIED_BY VARCHAR2(100 BYTE) NOT NULL,MODIFIED_DATE DATE NOT NULL,LAST_MAKER VARCHAR2(100 BYTE), LAST_CHECKER VARCHAR2(100 BYTE), STATUS_COMMENT VARCHAR2(1000 BYTE), WF_STATUS VARCHAR2(1000 BYTE))";

	public static final String DROP_GDPR_DATA_HOLD_MAPPING_MSTR_TABLE = "DROP TABLE GDPR_DATA_HOLD_MAPPING_MSTR";

	public static final String CREATE_GDPR_DATA_HOLD_MAPPING_MSTR_TABLE = "CREATE TABLE GDPR_DATA_HOLD_MAPPING_MSTR("+"ID VARCHAR2(100 BYTE) PRIMARY KEY,DATA_HOLD_ID VARCHAR2(30 BYTE) NOT NULL,RECORD_ID VARCHAR2(50 BYTE),"
			+ "DISPLAY_ID VARCHAR2(500 BYTE),MODULE_ID VARCHAR2(30 BYTE) NOT NULL,ACTIVE_STATUS VARCHAR2(100 BYTE) NOT NULL,CREATED_DATE DATE NOT NULL, MODIFIED_BY VARCHAR2(100 BYTE) NOT NULL,"
			+ "MODIFIED_DATE DATE NOT NULL,LAST_MAKER VARCHAR2(100 BYTE), LAST_CHECKER VARCHAR2(100 BYTE), STATUS_COMMENT VARCHAR2(1000 BYTE), WF_STATUS VARCHAR2(1000 BYTE))";

	public static final String DROP_GDPR_MODULE_CONFIG_TABLE = "DROP TABLE GDPR_MODULE_CONFIG";

	public static final String CREATE_GDPR_MODULE_CONFIG_TABLE = "CREATE TABLE GDPR_MODULE_CONFIG("+"MODULE_ID VARCHAR2(100) PRIMARY KEY,MODULE_NAME VARCHAR2(40),QUERY_TYPE VARCHAR2(50 BYTE),MODULE_BASE_QUERY VARCHAR2(4000 BYTE), "
			+ "VALIDATION_PROC VARCHAR2(400 BYTE),DELETION_PROC VARCHAR2(400 BYTE),BASE_QUERY_VIEW VARCHAR2(4000 BYTE),MODULE_RET_YEAR NUMBER(10,0) DEFAULT 0 NOT NULL, "
			+ "MODULE_RET_MONTH NUMBER(10,0) DEFAULT 0 NOT NULL,MODULE_RET_DAYS NUMBER(10,0) DEFAULT 0 NOT NULL,CREATED_DATE DATE DEFAULT SYSDATE, ACTIVE_STATUS VARCHAR2(1) DEFAULT 'Y'),"
			+ " CONSTRAINT MODULE_BASE_QUERY_CHECK CHECK (MODULE_BASE_QUERY NOT LIKE '%;%'), CONSTRAINT VALIDATION_PROC_CHECK CHECK (VALIDATION_PROC NOT LIKE '%;%'),"
			+ " CONSTRAINT DELETION_PROC_CHECK CHECK (DELETION_PROC NOT LIKE '%;%'), CONSTRAINT BASE_QUERY_VIEW_CHECK CHECK (BASE_QUERY_VIEW NOT LIKE '%;%')";

	public static final String DROP_GDPR_PROCESS_REQUEST_MSTR_TABLE = "DROP TABLE GDPR_PROCESS_REQUEST_MSTR";

	public static final String CREATE_GDPR_PROCESS_REQUEST_MSTR_TABLE = "CREATE TABLE GDPR_PROCESS_REQUEST_MSTR("+"REQUEST_ID NUMBER PRIMARY KEY,REPORT_DATE DATE NOT NULL,REPORT_TYPE VARCHAR2(50) NOT NULL,"
			+ "REQUESTED_USER VARCHAR2(50) NOT NULL,REQUEST_STATUS VARCHAR2(50),REQUEST_DATE DEFAULT SYSDATE,START_DATE DATE, END_DATE DATE,"
			+ "LAST_UPDATED_TIME TIMESTAMP)";

	public static final String DROP_GDPR_MODULE_LVL_RETPEROID_MSTR_TABLE = "DROP TABLE GDPR_MODULE_LVL_RETPEROID_MSTR";

	public static final String CREATE_GDPR_MODULE_LVL_RETPEROID_MSTR_TABLE = "CREATE TABLE GDPR_MODULE_LVL_RETPEROID_MSTR("+"ID VARCHAR2(30 BYTE),MODULE_ID VARCHAR2(30 BYTE),MODULE_OWNER VARCHAR2(255 BYTE),"
			+ "MODULE_RET_YEAR NUMBER(10,0),MODULE_RET_MONTH NUMBER(10,0),MODULE_RET_DAYS NUMBER(10,0),ACTIVE_STATUS CHAR(1 BYTE), CREATED_BY VARCHAR2(200 BYTE),"
			+ "CREATED_DATE DATE,MODIFIED_BY VARCHAR2(200 BYTE),MODIFIED_DATE DATE)";

	public static final String DROP_GDPR_STG_KEY_LIST_TABLE = "DROP TABLE GDPR_STG_KEY_LIST";

	public static final String CREATE_GDPR_STG_KEY_LIST_TABLE = "CREATE TABLE GDPR_STG_KEY_LIST("+"REQUEST_ID NUMBER,MODULE_ID VARCHAR2(50 BYTE),RECORD_ID VARCHAR2(50 BYTE),"
			+ "DISPLAY_ID VARCHAR2(1000 BYTE),DATE_TOBE_CONSIDERED DATE,EXPECTED_DEL_DATE DATE,DEL_EXEC_DATE DATE, DATA_HOLD VARCHAR2(1 BYTE),"
			+ "MAPPED_DATA_HOLD VARCHAR2(500 BYTE),MAX_DATA_HOLD_DATE DATE,SOFT_DELETE VARCHAR2(1 BYTE),STATUS VARCHAR2(100 BYTE), REASON VARCHAR2(1000 BYTE))";

	public static final String DROP_GDPR_REPORT_CYCLE_CONFIG_TABLE = "DROP TABLE GDPR_REPORT_CYCLE_CONFIG";

	public static final String CREATE_GDPR_REPORT_CYCLE_CONFIG_TABLE = "CREATE TABLE GDPR_REPORT_CYCLE_CONFIG("+"LABEL_VALUE VARCHAR2(50 BYTE),KEY_VALUE DATE)";

	

	public static final String SELECT_GDPR_TABLE_LIST = "SELECT TABLE_NAME FROM ALL_TABLES WHERE OWNER = 'HR' AND TABLE_NAME NOT LIKE 'GDPR%'";

	public static final String DROP_GDPR_MODULE_LVL_RP_MSTR_SEQ = "DROP SEQUENCE GDPR_MODULE_LVL_RP_MSTR";
	
	public static final String CREATE_GDPR_MODULE_LVL_RP_MSTR_SEQ = "CREATE SEQUENCE GDPR_MODULE_LVL_RP_MSTR START WITH 1";
	
	public static final String DROP_GDPR_PROCESS_REQUEST_MSTR_SEQ = "DROP SEQUENCE GDPR_PROCESS_REQUEST_MSTR_SEQ";
	
	public static final String CREATE_GDPR_PROCESS_REQUEST_MSTR_SEQ = "CREATE SEQUENCE GDPR_PROCESS_REQUEST_MSTR_SEQ START WITH 1";
	//new added constants 13-dec
	public static final String  CREATE_GDPR_DATA_HOLD_MSTR_SEQ = "CREATE SEQUENCE GDPR_DATA_HOLD_MSTR_SEQ START WITH 1";
	
	//public static final String  CREATE_GDPR_DATA_HOLD_MSTR_SEQ_NEXT_VAL = "SELECT GDPR_DATA_HOLD_MSTR_seq.NEXTVAL INTO   :new.id FROM   dual";
	
	//public static final String  CREATE_TRIGGER_GDPR_DATA_HOLD_MSTR_ID_TRG = "CREATE OR REPLACE TRIGGER GDPR_DATA_HOLD_MSTR_ID_TRG BEFORE INSERT ON GDPR_DATA_HOLD_MSTR FOR EACH ROW";
	
	public static final String  CREATE_VIEW_gdpr_legal_hold_view = "create or replace view gdpr_legal_hold_view (data_hold_id,record_id,module_id,data_hold_start_date,data_hold_end_date)"
			+ " as "
			+ " select hold.id, record_id, module_id, trunc(hold_start_date) as data_hold_start_date, trunc(hold_end_date) as data_hold_end_date"
			+ " from gdpr_data_hold_mapping_mstr mapping , gdpr_data_hold_mstr hold"
			+ " where mapping.id = mapping.data_hold_id";
	

	public static final String SAVE_LEGAL_HOLD_INFO = "INSERT INTO GDPR_DATA_HOLD_MSTR"+"(ID,EXTERNAL_DATA_HOLD_ID,HOLD_TYPE,"
			+ "HOLD_START_DATE,HOLD_END_DATE,COMMENTS,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE"
			+ ") VALUES (GDPR_DATA_HOLD_MSTR_seq.NEXTVAL,?,?,?,?,?,?,?,?,?)";

	
			

			
}
